generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model admins {
  id              String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  avatar          Int      @default(0)
  email           String   @unique
  tokenKey        String   @unique
  passwordHash    String
  lastResetSentAt String   @default("")
  created         DateTime @default(now()) @db.Timestamptz(6)
  updated         DateTime @default(now()) @db.Timestamptz(6)

  @@map("_admins")
}

model collections {
  id            String          @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  system        Boolean         @default(false)
  type          String          @default("base")
  name          String          @unique
  schema        Json            @default("[]") @db.Json
  indexes       Json            @default("[]") @db.Json
  listRule      String?
  viewRule      String?
  createRule    String?
  updateRule    String?
  deleteRule    String?
  options       Json            @default("{}") @db.Json
  created       DateTime        @default(now()) @db.Timestamptz(6)
  updated       DateTime        @default(now()) @db.Timestamptz(6)
  externalAuths externalAuths[]

  @@map("_collections")
}

model externalAuths {
  id           String      @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  collectionId String
  recordId     String
  provider     String
  providerId   String
  created      DateTime    @default(now()) @db.Timestamptz(6)
  updated      DateTime    @default(now()) @db.Timestamptz(6)
  collections  collections @relation(fields: [collectionId], references: [id], onDelete: Cascade)

  @@unique([collectionId, provider, providerId], map: "_externalauths_collection_provider_idx")
  @@unique([collectionId, recordId, provider], map: "_externalauths_record_provider_idx")
  @@map("_externalAuths")
}

model migrations {
  file    String   @id @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)

  @@map("_migrations")
}

model params {
  id      String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  key     String   @unique
  value   Json?    @db.Json
  created DateTime @default(now()) @db.Timestamptz(6)
  updated DateTime @default(now()) @db.Timestamptz(6)

  @@map("_params")
}

model sys_action {
  code      String   @unique(map: "idx_ajti1fk") @default("")
  created   DateTime @default(now()) @db.Timestamptz(6)
  id        String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  name      String   @unique(map: "idx_hm9tgfg") @default("")
  updated   DateTime @default(now()) @db.Timestamptz(6)
  is_active Boolean  @default(false)
}

model sys_permission {
  action_id   String   @default("")
  code        String   @unique(map: "idx_ea4s61a") @default("")
  created     DateTime @default(now()) @db.Timestamptz(6)
  description String   @default("")
  id          String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  name        String   @unique(map: "idx_cl3ugwl") @default("")
  resource_id String   @default("")
  updated     DateTime @default(now()) @db.Timestamptz(6)
  is_active   Boolean  @default(false)

  @@unique([resource_id, action_id], map: "idx_5xtoxww")
  @@unique([resource_id, action_id], map: "idx_kb9px1t")
}

model sys_resource {
  code      String   @unique(map: "idx_rk2phv9") @default("")
  created   DateTime @default(now()) @db.Timestamptz(6)
  id        String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  name      String   @unique(map: "idx_p2vqkrr") @default("")
  updated   DateTime @default(now()) @db.Timestamptz(6)
  is_active Boolean  @default(false)
  actions   Json     @default("[]") @db.Json
}

model sys_role {
  created     DateTime @default(now()) @db.Timestamptz(6)
  description String   @default("")
  id          String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  name        String   @unique(map: "idx_eyici8a") @default("")
  updated     DateTime @default(now()) @db.Timestamptz(6)
  is_active   Boolean  @default(false)
}

model sys_role_permission {
  created       DateTime @default(now()) @db.Timestamptz(6)
  id            String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  permission_id String   @default("")
  role_id       String   @default("")
  updated       DateTime @default(now()) @db.Timestamptz(6)

  @@unique([role_id, permission_id], map: "idx_wkljljh")
}

model sys_user {
  avatar        String   @default("")
  created       DateTime @default(now()) @db.Timestamptz(6)
  email         String   @unique(map: "idx_3q5o1p3") @default("")
  id            String   @id @default(dbgenerated("generate_snowflake()")) @db.VarChar(32)
  password_hash String   @default("")
  roles         Json     @default("[]") @db.Json
  updated       DateTime @default(now()) @db.Timestamptz(6)
  username      String   @unique(map: "idx_1ihlfng") @default("")
  verified      Boolean  @default(false)
  first_name    String   @default("")
  last_name     String   @default("")
}
